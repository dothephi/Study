--q1
SELECT title
FROM Movie
WHERE director = 'Steven Spielberg';
--q2
SELECT DISTINCT Movie.year
FROM Rating, Movie
WHERE Rating.stars < 6 AND Rating.stars > 3
AND Movie.mID = Rating.mID
ORDER BY Movie.year;
--q3
SELECT DISTINCT Movie.title
FROM Movie, Rating
WHERE Movie.mID NOT IN(
SELECT Movie.mID
FROM Movie,Rating
WHERE Movie.mID = Rating.mID);
--q4
SELECT Reviewer.name
FROM Reviewer, Rating
WHERE ratingDate IS NULL
AND Reviewer.rID = Rating.rID;
--q5
SELECT DISTINCT Reviewer.name, Movie.title, Rating.stars, Rating.ratingDate
FROM Movie, Reviewer, Rating
WHERE Reviewer.rID = Rating.rID AND Rating.mID = Movie.mID 
ORDER BY Reviewer.name, Movie.title, Rating.stars
--q6
SELECT Reviewer.name, Movie.title
FROM Rating R1, Rating R2, Reviewer, Movie
WHERE R1.rID= R2.rID
AND R1.RatingDate < R2.RatingDate
AND R1.mID = R2.mID
AND R1.stars < R2.stars
AND R2.mID = movie.mID
AND R2.rID = reviewer.rID ;
--q7
SELECT title, max(stars)
FROM Movie
JOIN Rating ON Rating.mID = Movie.mID
GROUP BY Rating.mID, title
ORDER BY title ASC;
--q8
SELECT title, max(stars)-min(stars) AS rating_spread
FROM Movie
JOIN Rating ON Rating.mID = Movie.mID
GROUP BY Rating.mID, title
ORDER BY rating_spread DESC, title ASC;
--q9
SELECT
    COALESCE(AVG(CASE WHEN year < 1980 THEN avg1 END), 0)
       - COALESCE(AVG(CASE WHEN year >= 1980 THEN avg1 END), 0) rating_diff
FROM (
    SELECT m.mID, m.year, AVG(stars * 1.0) avg1
    FROM Movie m
    INNER JOIN Rating r ON m.mID = r.mID
    GROUP BY m.mID, m.year
) x
--q10
SELECT DISTINCT name
FROM Rating
INNER JOIN Movie
ON Movie.mID = Rating.mID
INNER JOIN Reviewer
ON Reviewer.rID = Rating.rID
WHERE title = 'Gone with the Wind';
--q11
SELECT name, title, stars
FROM Rating
INNER JOIN Movie
ON Movie.mID = Rating.mID
INNER JOIN Reviewer
ON Reviewer.rID = Rating.rID
WHERE name = director;
--q12
SELECT name as cname from Reviewer
union all
select title as cname from Movie
ORDER BY cname ASC;
--q13
SELECT title
FROM Movie
WHERE mID NOT IN ( 
SELECT mID FROM Rating INNER JOIN REVIEWER ON rating.rID = reviewer.rid 
WHERE name = 'Chris Jackson'
);
--q14
SELECT DISTINCT Re1.name, Re2.name
FROM Rating R1, Rating R2, Reviewer Re1, Reviewer Re2
WHERE R1.mID = R2.mID
and R1.rID = Re1.rID
and R2.rID = Re2.rID
and Re1.name < Re2.name
ORDER BY Re1.name, Re2.name;
--q15
SELECT name, title, stars
FROM MOVIE
INNER JOIN RATING ON Movie.mID = Rating.mID
INNER JOIN REVIEWER ON Reviewer.rID = Rating.rID
WHERE stars = (SELECT MIN(stars) FROM RATING);
--q16
SELECT title, AVG(stars)
FROM MOVIE
INNER JOIN RATING ON Movie.mID = Rating.mID
INNER JOIN REVIEWER ON Reviewer.rID = Rating.rID
GROUP BY rating.mid, title
ORDER BY AVG(STARS) DESC, title ASC;
--q17
SELECT name
FROM MOVIE
INNER JOIN RATING ON Movie.mID = Rating.mID
INNER JOIN REVIEWER ON Reviewer.rID = Rating.rID
GROUP BY reviewer.rID, name
HAVING COUNT(*) >= 3;
--q18
SELECT M1.title, m1.director
FROM MOVIE M1
INNER JOIN MOVIE M2 ON M1.director = M2.director
GROUP BY m1.mID, m1.title, m1.director
HAVING COUNT(*) >1
ORDER BY m1.director, m1.title;
--q19
SELECT title, AVG(stars) as average
FROM MOVIE
INNER JOIN RATING ON Movie.mID = Rating.mID
INNER JOIN REVIEWER ON Reviewer.rID = Rating.rID
GROUP BY movie.mID, title
HAVING  AVG(stars) = (
SELECT MAX(avg_stars)
FROM (
SELECT title, AVG(stars) AS avg_stars
FROM MOVIE
INNER JOIN RATING ON Rating.mID = Movie.mID
GROUP BY movie.mID, title
) I
);
--q20
SELECT title, AVG(stars) as average
FROM MOVIE
INNER JOIN RATING ON Movie.mID = Rating.mID
INNER JOIN REVIEWER ON Reviewer.rID = Rating.rID
GROUP BY movie.mID, title
HAVING  AVG(stars) = (
SELECT MIN(avg_stars)
FROM (
SELECT title, AVG(stars) AS avg_stars
FROM MOVIE
INNER JOIN RATING ON Rating.mID = Movie.mID
GROUP BY movie.mID, title
) I
);
--q21
SELECT director, title, MAX(stars)
FROM Movie
INNER JOIN RATING ON rating.mID = movie.mID
WHERE DIRECTOR is NOT NULL
GROUP BY DIRECTOR, title;



/*
--q22
INSERT INTO Reviewer(rID, name)
VALUES (209, 'Roger Ebert')
--q23
insert into rating 
select rid, mid, 5, null
from reviewer, movie
where name='James Cameron'
--q24
UPDATE movie
SET year = year + 25
WHERE mID IN (
  SELECT mID FROM (
  SELECT AVG(stars) AS astar, mID FROM Rating
  WHERE mID=rating.mID
  GROUP BY mID
  HAVING AVG(stars) >=4) d
) 
--q25
DELETE FROM rating
WHERE mID IN (SELECT mID FROM movie WHERE year <1970 OR year > 2000)
AND stars < 4;